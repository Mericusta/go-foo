// Code generated by MockGen. DO NOT EDIT.
// Source: go-foo/src/mock-foo (interfaces: ExampleInterface)

// Package mockfoo is a generated GoMock package.
package mockfoo

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockExampleInterface is a mock of ExampleInterface interface.
type MockExampleInterface struct {
	ctrl     *gomock.Controller
	recorder *MockExampleInterfaceMockRecorder
}

// MockExampleInterfaceMockRecorder is the mock recorder for MockExampleInterface.
type MockExampleInterfaceMockRecorder struct {
	mock *MockExampleInterface
}

// NewMockExampleInterface creates a new mock instance.
func NewMockExampleInterface(ctrl *gomock.Controller) *MockExampleInterface {
	mock := &MockExampleInterface{ctrl: ctrl}
	mock.recorder = &MockExampleInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockExampleInterface) EXPECT() *MockExampleInterfaceMockRecorder {
	return m.recorder
}

// ExampleMethod mocks base method.
func (m *MockExampleInterface) ExampleMethod(arg0 int, arg1 string, arg2 interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ExampleMethod", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// ExampleMethod indicates an expected call of ExampleMethod.
func (mr *MockExampleInterfaceMockRecorder) ExampleMethod(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExampleMethod", reflect.TypeOf((*MockExampleInterface)(nil).ExampleMethod), arg0, arg1, arg2)
}
