// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.19.1
// source: example.proto

package data_exchange

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FightPlayerData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID    int32           `protobuf:"varint,1,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
	PlayerID   uint64          `protobuf:"varint,2,opt,name=PlayerID,proto3" json:"PlayerID,omitempty"`
	RobotID    int32           `protobuf:"varint,3,opt,name=RobotID,proto3" json:"RobotID,omitempty"`
	PlayerName string          `protobuf:"bytes,4,opt,name=PlayerName,proto3" json:"PlayerName,omitempty"`
	MaxHP      int32           `protobuf:"varint,5,opt,name=MaxHP,proto3" json:"MaxHP,omitempty"`
	CurrentHP  int32           `protobuf:"varint,6,opt,name=CurrentHP,proto3" json:"CurrentHP,omitempty"`
	Wave       int32           `protobuf:"varint,7,opt,name=Wave,proto3" json:"Wave,omitempty"`
	Score      int32           `protobuf:"varint,8,opt,name=Score,proto3" json:"Score,omitempty"`
	ScoreLevel int32           `protobuf:"varint,9,opt,name=ScoreLevel,proto3" json:"ScoreLevel,omitempty"`
	Finished   bool            `protobuf:"varint,10,opt,name=Finished,proto3" json:"Finished,omitempty"`
	Attacked   map[int32]int32 `protobuf:"bytes,11,rep,name=Attacked,proto3" json:"Attacked,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *FightPlayerData) Reset() {
	*x = FightPlayerData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FightPlayerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FightPlayerData) ProtoMessage() {}

func (x *FightPlayerData) ProtoReflect() protoreflect.Message {
	mi := &file_example_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FightPlayerData.ProtoReflect.Descriptor instead.
func (*FightPlayerData) Descriptor() ([]byte, []int) {
	return file_example_proto_rawDescGZIP(), []int{0}
}

func (x *FightPlayerData) GetGroupID() int32 {
	if x != nil {
		return x.GroupID
	}
	return 0
}

func (x *FightPlayerData) GetPlayerID() uint64 {
	if x != nil {
		return x.PlayerID
	}
	return 0
}

func (x *FightPlayerData) GetRobotID() int32 {
	if x != nil {
		return x.RobotID
	}
	return 0
}

func (x *FightPlayerData) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

func (x *FightPlayerData) GetMaxHP() int32 {
	if x != nil {
		return x.MaxHP
	}
	return 0
}

func (x *FightPlayerData) GetCurrentHP() int32 {
	if x != nil {
		return x.CurrentHP
	}
	return 0
}

func (x *FightPlayerData) GetWave() int32 {
	if x != nil {
		return x.Wave
	}
	return 0
}

func (x *FightPlayerData) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *FightPlayerData) GetScoreLevel() int32 {
	if x != nil {
		return x.ScoreLevel
	}
	return 0
}

func (x *FightPlayerData) GetFinished() bool {
	if x != nil {
		return x.Finished
	}
	return false
}

func (x *FightPlayerData) GetAttacked() map[int32]int32 {
	if x != nil {
		return x.Attacked
	}
	return nil
}

type RobotsFightData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Robots []*FightPlayerData `protobuf:"bytes,1,rep,name=Robots,proto3" json:"Robots,omitempty"`
}

func (x *RobotsFightData) Reset() {
	*x = RobotsFightData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RobotsFightData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RobotsFightData) ProtoMessage() {}

func (x *RobotsFightData) ProtoReflect() protoreflect.Message {
	mi := &file_example_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RobotsFightData.ProtoReflect.Descriptor instead.
func (*RobotsFightData) Descriptor() ([]byte, []int) {
	return file_example_proto_rawDescGZIP(), []int{1}
}

func (x *RobotsFightData) GetRobots() []*FightPlayerData {
	if x != nil {
		return x.Robots
	}
	return nil
}

var File_example_proto protoreflect.FileDescriptor

var file_example_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0d, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x22, 0xa2,
	0x03, 0x0a, 0x0f, 0x46, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x6f, 0x62, 0x6f,
	0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x52, 0x6f, 0x62, 0x6f, 0x74,
	0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x61, 0x78, 0x48, 0x50, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x4d, 0x61, 0x78, 0x48, 0x50, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x48, 0x50, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x48, 0x50, 0x12, 0x12, 0x0a, 0x04, 0x57, 0x61, 0x76, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x57, 0x61, 0x76, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x48, 0x0a, 0x08,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x46,
	0x69, 0x67, 0x68, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x41,
	0x74, 0x74, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x1a, 0x3b, 0x0a, 0x0d, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b,
	0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x49, 0x0a, 0x0f, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x73, 0x46, 0x69, 0x67,
	0x68, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x36, 0x0a, 0x06, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x65, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x73, 0x42, 0x28,
	0x5a, 0x26, 0x67, 0x6f, 0x2d, 0x66, 0x6f, 0x6f, 0x2f, 0x63, 0x6d, 0x64, 0x2f, 0x64, 0x61, 0x74,
	0x61, 0x2d, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x3b, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_example_proto_rawDescOnce sync.Once
	file_example_proto_rawDescData = file_example_proto_rawDesc
)

func file_example_proto_rawDescGZIP() []byte {
	file_example_proto_rawDescOnce.Do(func() {
		file_example_proto_rawDescData = protoimpl.X.CompressGZIP(file_example_proto_rawDescData)
	})
	return file_example_proto_rawDescData
}

var file_example_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_example_proto_goTypes = []interface{}{
	(*FightPlayerData)(nil), // 0: data_exchange.FightPlayerData
	(*RobotsFightData)(nil), // 1: data_exchange.RobotsFightData
	nil,                     // 2: data_exchange.FightPlayerData.AttackedEntry
}
var file_example_proto_depIdxs = []int32{
	2, // 0: data_exchange.FightPlayerData.Attacked:type_name -> data_exchange.FightPlayerData.AttackedEntry
	0, // 1: data_exchange.RobotsFightData.Robots:type_name -> data_exchange.FightPlayerData
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_example_proto_init() }
func file_example_proto_init() {
	if File_example_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_example_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FightPlayerData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RobotsFightData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_example_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_example_proto_goTypes,
		DependencyIndexes: file_example_proto_depIdxs,
		MessageInfos:      file_example_proto_msgTypes,
	}.Build()
	File_example_proto = out.File
	file_example_proto_rawDesc = nil
	file_example_proto_goTypes = nil
	file_example_proto_depIdxs = nil
}
